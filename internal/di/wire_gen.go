// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"gorm.io/gorm"
	"hmdp/internal/controller"
	"hmdp/internal/model"
	"hmdp/internal/service"
)

// Injectors from wire.go:

func InitHandlers() *controller.Handler {
	db := InitDB()
	userHandler := InitUserHandler(db)
	shopHandler := InitShopHandler(db)
	shopTypeHandler := InitShopTypeHandler(db)
	blogHandler := InitBlogHandler(db)
	voucherHandler := InitVoucherHandler(db)
	handler := controller.NewHandlers(userHandler, shopHandler, shopTypeHandler, blogHandler, voucherHandler)
	return handler
}

func InitDB() *gorm.DB {
	db := model.GetDB()
	return db
}

func InitUserHandler(db *gorm.DB) *controller.UserHandler {
	userService := service.NewUserService(db)
	userHandler := controller.NewUserHandler(userService)
	return userHandler
}

func InitShopHandler(db *gorm.DB) *controller.ShopHandler {
	shopService := service.NewShopService(db)
	shopHandler := controller.NewShopHandler(shopService)
	return shopHandler
}

func InitBlogHandler(db *gorm.DB) *controller.BlogHandler {
	blogService := service.NewBlogService(db)
	blogHandler := controller.NewBlogHandler(blogService)
	return blogHandler
}

func InitVoucherHandler(db *gorm.DB) *controller.VoucherHandler {
	voucherService := service.NewVoucherService(db)
	voucherHandler := controller.NewVoucherHandler(voucherService)
	return voucherHandler
}

func InitShopTypeHandler(db *gorm.DB) *controller.ShopTypeHandler {
	shopTypeService := service.NewShowTypeService(db)
	shopTypeHandler := controller.NewShopTypeController(shopTypeService)
	return shopTypeHandler
}
