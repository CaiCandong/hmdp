// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"gorm.io/gorm"
	"hmdp/internal/app/services"
	"hmdp/internal/domain/aggregate"
	"hmdp/internal/domain/repository"
	"hmdp/internal/infrastructure/mysql"
	"hmdp/internal/interfaces/controller"
)

// Injectors from wire.go:

func InitUserRepo(db *gorm.DB) repository.IUserRepo {
	iUserRepo := mysql.NewUserRepo(db)
	return iUserRepo
}

func InitShopHandler(db *gorm.DB) *controller.ShopHandler {
	iShopRepo := mysql.NewShopRepo(db)
	iShopService := services.NewShopService(iShopRepo)
	shopHandler := controller.NewShopHandler(iShopService)
	return shopHandler
}

func InitUserHandler(db *gorm.DB) *controller.UserHandler {
	iUserRepo := mysql.NewUserRepo(db)
	iUserAggregate := aggregate.NewUserAggregate(iUserRepo)
	iUserService := services.NewUserService(iUserAggregate)
	userHandler := controller.NewUserHandler(iUserService)
	return userHandler
}

func InitBlogHandler(db *gorm.DB) *controller.BlogController {
	iBlogRepo := mysql.NewBlogRepo(db)
	iBlogService := services.NewBlogService(iBlogRepo)
	blogController := controller.NewBlogController(iBlogService)
	return blogController
}

func InitVoucherHandler(db *gorm.DB) *controller.VoucherHandler {
	iVoucherRepo := mysql.NewVoucherRepo(db)
	iVoucherService := services.NewVoucherService(iVoucherRepo)
	voucherHandler := controller.NewVoucherHandler(iVoucherService)
	return voucherHandler
}

func InitShopTypeHandler(db *gorm.DB) *controller.ShopTypeController {
	iShopTypeRepo := mysql.NewShopTypeRepo(db)
	iShopTypeService := services.NewShowTypeService(iShopTypeRepo)
	shopTypeController := controller.NewShopTypeController(iShopTypeService)
	return shopTypeController
}
